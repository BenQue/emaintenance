# Dockerfile for Next.js Web Application
FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /repo

# Install dependencies
RUN apk add --no-cache libc6-compat
COPY package*.json ./
# Copy workspace manifests to allow npm workspaces resolution
COPY apps/web/package*.json apps/web/
COPY apps/api/user-service/package*.json apps/api/user-service/
COPY apps/api/work-order-service/package*.json apps/api/work-order-service/
COPY apps/api/asset-service/package*.json apps/api/asset-service/
COPY packages/database/package*.json packages/database/
COPY packages/eslint-config/package*.json packages/eslint-config/
COPY packages/shared/package*.json packages/shared/
COPY packages/typescript-config/package*.json packages/typescript-config/
RUN npm ci

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /repo
COPY --from=deps /repo/node_modules ./node_modules
COPY . .

# Note: Prisma client will be generated by the main build process

# Build application
ARG NODE_ENV=production
ARG NEXT_PUBLIC_API_URL
ARG NEXT_PUBLIC_USER_SERVICE_URL
ARG NEXT_PUBLIC_WORK_ORDER_SERVICE_URL
ARG NEXT_PUBLIC_ASSET_SERVICE_URL

ENV NODE_ENV=$NODE_ENV \
    NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL \
    NEXT_PUBLIC_USER_SERVICE_URL=$NEXT_PUBLIC_USER_SERVICE_URL \
    NEXT_PUBLIC_WORK_ORDER_SERVICE_URL=$NEXT_PUBLIC_WORK_ORDER_SERVICE_URL \
    NEXT_PUBLIC_ASSET_SERVICE_URL=$NEXT_PUBLIC_ASSET_SERVICE_URL

RUN npm run -w apps/web build

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /repo/apps/web/public ./apps/web/public

# Set the correct permission for prerender cache
RUN mkdir .next
RUN chown nextjs:nodejs .next

# Automatically leverage output traces to reduce image size
COPY --from=builder --chown=nextjs:nodejs /repo/apps/web/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /repo/apps/web/.next/static ./apps/web/.next/static

USER nextjs

EXPOSE 3000

ENV PORT 3000
ENV HOSTNAME "0.0.0.0"

RUN apk add --no-cache curl

CMD ["node", "apps/web/server.js"]