# Nginx Configuration for Local Testing
# This configuration routes traffic for local testing environment

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic configuration
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;
    
    # Rate limiting (relaxed for local testing)
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/s;
    
    # Upstream definitions
    upstream web_backend {
        server web-local:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream user_service_backend {
        server user-service-local:3001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    upstream work_order_service_backend {
        server work-order-service-local:3002 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    upstream asset_service_backend {
        server asset-service-local:3003 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    # Health check endpoint
    server {
        listen 80;
        server_name localhost;
        
        location /health {
            access_log off;
            return 200 "nginx-local-ok\n";
            add_header Content-Type text/plain;
        }
    }
    
    # Main server configuration
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # API routes
        location /api/users/ {
            limit_req zone=api burst=50 nodelay;
            
            # Remove /api/users prefix and forward to user service
            rewrite ^/api/users/(.*) /$1 break;
            
            proxy_pass http://user_service_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Enable keep-alive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        
        location /api/work-orders/ {
            limit_req zone=api burst=50 nodelay;
            
            # Remove /api/work-orders prefix and forward to work order service
            rewrite ^/api/work-orders/(.*) /$1 break;
            
            proxy_pass http://work_order_service_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Enable keep-alive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        
        location /api/assets/ {
            limit_req zone=api burst=50 nodelay;
            
            # Remove /api/assets prefix and forward to asset service
            rewrite ^/api/assets/(.*) /$1 break;
            
            proxy_pass http://asset_service_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Enable keep-alive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        
        # Authentication routes (rate limited)
        location ~ ^/api/(auth|login|logout|register) {
            limit_req zone=auth burst=10 nodelay;
            
            proxy_pass http://user_service_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Enable keep-alive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        
        # Direct service access (for development/debugging)
        location /direct/user-service/ {
            # Remove /direct/user-service prefix
            rewrite ^/direct/user-service/(.*) /$1 break;
            
            proxy_pass http://user_service_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /direct/work-order-service/ {
            # Remove /direct/work-order-service prefix
            rewrite ^/direct/work-order-service/(.*) /$1 break;
            
            proxy_pass http://work_order_service_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /direct/asset-service/ {
            # Remove /direct/asset-service prefix
            rewrite ^/direct/asset-service/(.*) /$1 break;
            
            proxy_pass http://asset_service_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_Set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static file handling for uploads
        location /uploads/ {
            root /var/uploads;
            expires 30d;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # Web application (catch-all)
        location / {
            proxy_pass http://web_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Enable keep-alive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # WebSocket support (for Next.js dev features)
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            return 500 "Service temporarily unavailable\n";
            add_header Content-Type text/plain;
        }
        
        location = /404.html {
            return 404 "Page not found\n";
            add_header Content-Type text/plain;
        }
    }
}