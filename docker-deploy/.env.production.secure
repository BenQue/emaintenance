# E-Maintenance Production Environment Configuration Template
# =========================================================
# SECURITY WARNING: This is a template file. DO NOT commit actual passwords to Git!
# 
# Instructions:
# 1. Copy this file to .env.production
# 2. Replace all placeholder values with secure passwords
# 3. Use the generate-passwords.sh script for secure password generation
# 4. NEVER commit .env.production to version control
#
# Server Configuration: Update with your actual server IP
# Created: Template Version 2.0

# ====================
# Database Configuration
# ====================
DB_NAME=emaintenance
DB_USER=postgres
# CHANGE THIS: Use a strong password (min 16 chars, mixed case, numbers, special chars)
DB_PASSWORD=YOUR_DATABASE_PASSWORD_HERE
# The DATABASE_URL will be automatically constructed
DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}

# ====================
# JWT Configuration
# ====================
# CHANGE THIS: Generate a random 64+ character string
# Use: openssl rand -base64 64
JWT_SECRET=YOUR_JWT_SECRET_HERE_MINIMUM_64_CHARACTERS
JWT_EXPIRES_IN=7d

# ====================
# Redis Configuration
# ====================
# CHANGE THIS: Use a strong password for Redis
REDIS_PASSWORD=YOUR_REDIS_PASSWORD_HERE
REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379

# ====================
# Service URLs (Internal Docker Network)
# ====================
USER_SERVICE_URL=http://user-service:3001
WORK_ORDER_SERVICE_URL=http://work-order-service:3002
ASSET_SERVICE_URL=http://asset-service:3003

# ====================
# Public API URLs (External Access via Nginx)
# ====================
# CHANGE THIS: Replace with your actual server IP or domain
SERVER_IP=YOUR_SERVER_IP_HERE
NEXT_PUBLIC_API_URL=http://${SERVER_IP}:3030
NEXT_PUBLIC_USER_SERVICE_URL=http://${SERVER_IP}:3031
NEXT_PUBLIC_WORK_ORDER_SERVICE_URL=http://${SERVER_IP}:3032
NEXT_PUBLIC_ASSET_SERVICE_URL=http://${SERVER_IP}:3033

# ====================
# Frontend Configuration
# ====================
FRONTEND_URL=http://${SERVER_IP}:3030
CORS_ORIGIN=http://${SERVER_IP}:3030

# ====================
# Port Configuration
# ====================
HTTP_PORT=3030
HTTPS_PORT=443

# ====================
# Logging Configuration
# ====================
LOG_LEVEL=info
LOG_FORMAT=json

# ====================
# Node Environment
# ====================
NODE_ENV=production

# ====================
# Local Docker Registry (Optional)
# ====================
# Uncomment and configure if using local registry
# LOCAL_REGISTRY=${SERVER_IP}:5000

# ====================
# Admin User Configuration
# ====================
# CHANGE THIS: Set initial admin password (will be hashed on first run)
ADMIN_EMAIL=admin@emaintenance.com
ADMIN_PASSWORD=YOUR_ADMIN_PASSWORD_HERE

# ====================
# Email Configuration (Optional)
# ====================
# Uncomment and configure for email notifications
# SMTP_HOST=smtp.your-email-provider.com
# SMTP_PORT=587
# SMTP_USER=your-email@domain.com
# SMTP_PASSWORD=YOUR_EMAIL_PASSWORD_HERE
# SMTP_FROM=noreply@emaintenance.com

# ====================
# Backup Configuration
# ====================
BACKUP_RETENTION_DAYS=30
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM

# ====================
# Security Settings
# ====================
RATE_LIMIT_WINDOW=15
RATE_LIMIT_MAX_REQUESTS=1000
SESSION_TIMEOUT=3600000  # 1 hour in milliseconds
PASSWORD_MIN_LENGTH=12
PASSWORD_REQUIRE_SPECIAL=true
PASSWORD_REQUIRE_NUMBER=true
PASSWORD_REQUIRE_UPPERCASE=true

# ====================
# Monitoring (Optional)
# ====================
# Uncomment for Prometheus/Grafana monitoring
# METRICS_ENABLED=true
# METRICS_PORT=9090