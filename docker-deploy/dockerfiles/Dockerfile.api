# Clean API Dockerfile for E-Maintenance Services
FROM node:20-alpine AS base
WORKDIR /app
RUN apk add --no-cache libc6-compat openssl curl

# Stage 1: Dependencies
FROM base AS deps
COPY package*.json ./
COPY packages/database/package*.json ./packages/database/
RUN npm ci

# Stage 2: Prisma
FROM deps AS prisma
COPY packages/database/ ./packages/database/
WORKDIR /app/packages/database
RUN npx prisma generate

# Stage 3: Builder
FROM deps AS builder
ARG SERVICE_PATH
ARG SERVICE_NAME
COPY turbo.json ./
COPY packages/ ./packages/
COPY ${SERVICE_PATH}/${SERVICE_NAME} ./service
COPY --from=prisma /app/packages/database/node_modules/.prisma ./packages/database/node_modules/.prisma
COPY --from=prisma /app/packages/database/node_modules/@prisma ./packages/database/node_modules/@prisma

WORKDIR /app/service
RUN npm run build || mkdir -p dist && cp -r src/* dist/ 2>/dev/null || cp -r . dist/

# Stage 4: Runtime
FROM base AS runner
RUN addgroup --system --gid 1001 nodejs && adduser --system --uid 1001 apiuser

COPY --from=builder /app/service/package*.json ./
RUN npm ci --only=production && npm cache clean --force

COPY --from=prisma /app/packages/database/prisma ./prisma
COPY --from=prisma /app/packages/database/node_modules/.prisma ./node_modules/.prisma
COPY --from=prisma /app/packages/database/node_modules/@prisma ./node_modules/@prisma
COPY --from=builder --chown=apiuser:nodejs /app/service/dist ./dist

RUN mkdir -p /app/uploads /app/logs && chown -R apiuser:nodejs /app/uploads /app/logs

ARG SERVICE_PORT
ENV PORT=${SERVICE_PORT:-3001}
ENV NODE_ENV=production

USER apiuser

HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:${SERVICE_PORT:-3001}/health || exit 1

CMD ["node", "dist/index.js"]