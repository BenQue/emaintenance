services:
  # PostgreSQL Database
  database:
    image: postgres:16-alpine
    container_name: emaintenance-db-hybrid
    environment:
      POSTGRES_DB: emaintenance
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-Qzy@7091!}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_hybrid:/var/lib/postgresql/data
      - ./docker/database/init:/docker-entrypoint-initdb.d
    networks:
      - emaintenance-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: emaintenance-redis-hybrid
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data_hybrid:/data
    networks:
      - emaintenance-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Next.js Web Application (development mode)
  web:
    image: node:20-alpine
    container_name: emaintenance-web-hybrid
    working_dir: /app/apps/web
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_USER_SERVICE_URL: http://localhost:3001
      NEXT_PUBLIC_WORK_ORDER_SERVICE_URL: http://localhost:3002
      NEXT_PUBLIC_ASSET_SERVICE_URL: http://localhost:3003
    ports:
      - "3000:3000"
    networks:
      - emaintenance-network
    volumes:
      - .:/app
      - web_node_modules_hybrid:/app/apps/web/node_modules
      - web_next_hybrid:/app/apps/web/.next
    command: >
      sh -c "
        apk add --no-cache libc6-compat &&
        npm install &&
        npm run dev
      "
    restart: unless-stopped

volumes:
  postgres_data_hybrid:
    driver: local
  redis_data_hybrid:
    driver: local
  web_node_modules_hybrid:
    driver: local
  web_next_hybrid:
    driver: local

networks:
  emaintenance-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.26.0.0/16