version: '3.8'

# E-Maintenance 用户服务
# 依赖: PostgreSQL, Redis (基础设施服务)

networks:
  emaintenance-network:
    external: true

services:
  user-service:
    build:
      context: ../../..
      dockerfile: deploy/Server/user-service/Dockerfile
    container_name: emaintenance-user-service
    environment:
      # 数据库配置 (容器间通信使用内部端口5432)
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@emaintenance-postgres:5432/emaintenance
      
      # JWT 配置
      JWT_SECRET: ${JWT_SECRET}
      
      # Redis 配置
      REDIS_URL: ${REDIS_URL:-redis://emaintenance-redis:6379}
      
      # 应用配置
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3001
      
      # 日志配置
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FORMAT: ${LOG_FORMAT:-json}
      
      # CORS 配置
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      
      # 速率限制配置
      RATE_LIMIT_ENABLED: ${RATE_LIMIT_ENABLED:-true}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      
    ports:
      - "${USER_SERVICE_PORT:-3001}:3001"
    
    volumes:
      - user-service-logs:/app/logs
      - /opt/emaintenance/logs/user-service:/backup/logs
    
    networks:
      - emaintenance-network
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

volumes:
  user-service-logs: