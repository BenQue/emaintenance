services:
  asset-service:
    build:
      context: ../../../
      dockerfile: deploy/Server/asset-service/Dockerfile
    container_name: emaintenance-asset-service
    ports:
      - "${ASSET_SERVICE_PORT:-3003}:3003"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3003
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@emaintenance-postgres:5432/emaintenance
      - JWT_SECRET=${JWT_SECRET:-please-set-jwt-secret}
      - REDIS_URL=${REDIS_URL:-redis://emaintenance-redis:6379}
      - USER_SERVICE_URL=${USER_SERVICE_URL:-http://emaintenance-user-service:3001}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3000}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-10485760}
      - QR_CODE_BASE_URL=${QR_CODE_BASE_URL:-http://localhost:3000/assets}
    volumes:
      - /opt/emaintenance/logs/asset-service:/app/logs
      - /opt/emaintenance/data/asset-uploads:/app/uploads
      - /opt/emaintenance/data/qr-codes:/app/qr-codes
    networks:
      - emaintenance-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  emaintenance-network:
    external: true